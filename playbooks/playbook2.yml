---
- name: instalar mysql y configurar base de datos
  hosts: ubuntu
  user: sysadmin
  become: yes
  vars:
    ansible_python_interpreter: auto_silent
    password: 'AppM2023.' 
  
  tasks:

  - name: Actualizar SO para distribución de familia Red Hat
    ansible.builtin.dnf:
      name: '*'
      state: latest
    when: ansible_os_family=='RedHat'
  
  - name: Actualizar SO para distribución de familia Debian
    ansible.builtin.apt:
      name: '*'
      state: latest
    when: ansible_os_family=='Debian'

  - name: instalar mariadb service
    ansible.builtin.apt:
      name: mariadb-server
      state: latest 
  
  - name: Asegurar el servicio Mariadb con mysql_secure_installation
    ansible.builtin.expect:
      command: mysql_secure_installation
      responses:
        'Enter current password for root': ''
        'Switch to unix_socket authentication': 'n' 
        'Change the root password': 'y'
        'New password': '{{password}}'
        'Re-enter new password': '{{password}}'
        'Remove anonymous users': 'y'
        'Disallow root login remotely': 'y'
        'Remove test database and access to it': 'y'
        'Reload privilege tables now': 'y'
      timeout: 1

  - name: Instalar pymysql requerido para interacción con base de datos (Debian)
    ansible.builtin.apt:
      name: python3-pymysql
      state: present
    when: ansible_os_family=='Debian'
  
  - name: Instalar pymysql requerido para interacción con base de datos (Debian)
    ansible.builtin.dnf:
      name: python3-pymysql
      state: present
    when: ansible_os_family=='RedHat'
  
  - name: Permitir acceso a la base de datos desde cualquier ip
    ansible.builtin.lineinfile:
      path: /etc/mysql/mariadb.conf.d/50-server.cnf
      line: bind-address            = 0.0.0.0
      regexp: '^bind-address'
  
  - name: Reiniciar mariadb
    ansible.builtin.systemd_service:
      name: mariadb
      state: restarted

  - name: Crear base de datos todo
    community.mysql.mysql_db:
      name: todo
      state: present
      login_user: root
      login_password: '{{password}}'

  - name: Crear usuario prueba
    community.mysql.mysql_user:
      login_user: root
      login_password: '{{password}}'
      state: present
      name: prueba
      password: prueba2024
      column_case_sensitive: false

  - name: Crear tablas de usuarios y tareas y luego dar permisos sobre la misma a prueba
    community.mysql.mysql_query:
      login_user: root
      login_password: '{{password}}'
      login_db: todo
      query:
      - CREATE TABLE `users` ( `id` int(3) NOT NULL AUTO_INCREMENT, `first_name` varchar(20) DEFAULT NULL, `last_name` varchar(20) DEFAULT NULL, `username` varchar(250) DEFAULT NULL, `password` varchar(20) DEFAULT NULL, PRIMARY KEY (`id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci; 
      - CREATE TABLE `todos` ( `id` bigint(20) NOT NULL AUTO_INCREMENT, `description` varchar(255) DEFAULT NULL, `is_done` bit(1) NOT NULL, `target_date` datetime(6) DEFAULT NULL, `username` varchar(255) DEFAULT NULL, `title` varchar(255) DEFAULT NULL, PRIMARY KEY (`id`) ) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci; 
      - GRANT ALL PRIVILEGES ON todo.* TO 'prueba'@'%' IDENTIFIED BY 'prueba2024';
      - FLUSH PRIVILEGES;


  - name: Habilitar tráfico de SSH
    community.general.ufw:
      rule: allow
      name: OpenSSH
  
  - name: Habilitar tráfico a través del puerto 3306 de MariaDB
    community.general.ufw:
      rule: allow
      port: '3306'
...

